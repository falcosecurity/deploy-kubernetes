apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: falco
  namespace: default
  labels:
    helm.sh/chart: falco-6.2.2
    app.kubernetes.io/name: falco
    app.kubernetes.io/instance: falco
    app.kubernetes.io/version: "0.41.3"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: falco
      app.kubernetes.io/instance: falco
  template:
    metadata:
      name: falco
      labels:
        app.kubernetes.io/name: falco
        app.kubernetes.io/instance: falco
      annotations:
        checksum/config: 705ff53eb2b3b37cfe63def3b731cbecb0fd8f1083f00a48f6757201b4642e9e
        checksum/rules: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        checksum/certs: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
    spec:
      serviceAccountName: falco
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      containers:
        - name: falco
          image: docker.io/falcosecurity/falco:0.41.3
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1000m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            privileged: true
          args:
            - /usr/bin/falco        
          env:
            - name: HOST_ROOT
              value: /host
            - name: FALCO_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: FALCO_K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          tty: false
          ports:
            - containerPort: 8765
              name: web
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: /healthz
              port: 8765
          readinessProbe:
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 15
            httpGet:
              path: /healthz
              port: 8765
          volumeMounts:
            - mountPath: /host/var/run/docker.sock
              name: container-engine-socket-0
            - mountPath: /host/run/podman/podman.sock
              name: container-engine-socket-1
            - mountPath: /host/run/host-containerd/containerd.sock
              name: container-engine-socket-2
            - mountPath: /host/run/containerd/containerd.sock
              name: container-engine-socket-3
            - mountPath: /host/run/crio/crio.sock
              name: container-engine-socket-4
            - mountPath: /host/run/k3s/containerd/containerd.sock
              name: container-engine-socket-5
            - mountPath: /etc/falco
              name: rulesfiles-install-dir
            - mountPath: /usr/share/falco/plugins
              name: plugins-install-dir
            - mountPath: /etc/falco/config.d
              name: specialized-falco-configs
            - mountPath: /root/.falco
              name: root-falco-fs
            - mountPath: /host/proc
              name: proc-fs
            - mountPath: /host/etc
              name: etc-fs
              readOnly: true
            - mountPath: /host/dev
              name: dev-fs
              readOnly: true
            - name: sys-fs
              mountPath: /sys/module
            - mountPath: /etc/falco/falco.yaml
              name: falco-yaml
              subPath: falco.yaml
            
        - name: falcoctl-artifact-follow
          image: docker.io/falcosecurity/falcoctl:0.11.2
          imagePullPolicy: IfNotPresent
          args:
            - artifact
            - follow
            - --log-format=json
          securityContext:
          volumeMounts:
            - mountPath: /plugins
              name: plugins-install-dir
            - mountPath: /rulesfiles
              name: rulesfiles-install-dir
            - mountPath: /etc/falcoctl
              name: falcoctl-config-volume
      initContainers:
        - name: falco-driver-loader
          image: docker.io/falcosecurity/falco-driver-loader:0.41.3
          imagePullPolicy: IfNotPresent
          args:
            - auto
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /root/.falco
              name: root-falco-fs
            - mountPath: /host/proc
              name: proc-fs
              readOnly: true
            - mountPath: /host/boot
              name: boot-fs
              readOnly: true
            - mountPath: /host/lib/modules
              name: lib-modules
            - mountPath: /host/usr
              name: usr-fs
              readOnly: true
            - mountPath: /host/etc
              name: etc-fs
              readOnly: true
            - mountPath: /etc/falco/config.d
              name: specialized-falco-configs
          env:
            - name: HOST_ROOT
              value: /host
            - name: FALCOCTL_DRIVER_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: FALCOCTL_DRIVER_CONFIG_CONFIGMAP
              value: falco
        - name: falcoctl-artifact-install
          image: docker.io/falcosecurity/falcoctl:0.11.2
          imagePullPolicy: IfNotPresent
          args: 
            - artifact
            - install
            - --log-format=json
          securityContext:
          volumeMounts:
            - mountPath: /plugins
              name: plugins-install-dir
            - mountPath: /rulesfiles
              name: rulesfiles-install-dir
            - mountPath: /etc/falcoctl
              name: falcoctl-config-volume
      volumes:
        - hostPath:
            path: /var/run/docker.sock
          name: container-engine-socket-0
        - hostPath:
            path: /run/podman/podman.sock
          name: container-engine-socket-1
        - hostPath:
            path: /run/host-containerd/containerd.sock
          name: container-engine-socket-2
        - hostPath:
            path: /run/containerd/containerd.sock
          name: container-engine-socket-3
        - hostPath:
            path: /run/crio/crio.sock
          name: container-engine-socket-4
        - hostPath:
            path: /run/k3s/containerd/containerd.sock
          name: container-engine-socket-5
        - name: specialized-falco-configs
          emptyDir: {}
        - name: plugins-install-dir
          emptyDir: {}
        - name: rulesfiles-install-dir
          emptyDir: {}
        - name: root-falco-fs
          emptyDir: {}  
        - name: boot-fs
          hostPath:
            path: /boot
        - name: lib-modules
          hostPath:
            path: /lib/modules
        - name: usr-fs
          hostPath:
            path: /usr
        - name: etc-fs
          hostPath:
            path: /etc
        - name: dev-fs
          hostPath:
            path: /dev
        - name: sys-fs
          hostPath:
            path: /sys/module
        - name: proc-fs
          hostPath:
            path: /proc
        - name: falcoctl-config-volume
          configMap: 
            name: falco-falcoctl
            items:
              - key: falcoctl.yaml
                path: falcoctl.yaml
        - name: falco-yaml
          configMap:
            name: falco
            items:
            - key: falco.yaml
              path: falco.yaml
        
  updateStrategy:
    type: RollingUpdate
